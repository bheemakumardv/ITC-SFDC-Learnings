Description: This lightning component code will autoredirect to logged user Accounts page.

Component Code:
--------------
<aura:component controller="GetProfileId" implements="force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId,forceCommunity:availableForAllPageTypes,force:lightningQuickAction" access="global" >
    <aura:handler name="init" value="{!this}" action="{!c.GetProfileID}"/>
    <aura:attribute name="responseStatus" type="Boolean" default="false" /> 
    <aura:attribute name="profileUrl" type="String"/>
    <aura:attribute name="firstName" type="String"/>
    <aura:attribute name="lastName" type="String"/>
    
    <aura:if  isTrue="{!v.responseStatus}" >
        <lightning:tile label="Update My Profile" href="{!v.profileUrl}">        
            <aura:set attribute="media">
                <lightning:avatar src="/docs/component-library/app/images/examples/avatar1.jpg" fallbackIconName="standard:person_account" alternativeText="Lexee L. Jackson"/>
            </aura:set>
            <ul class="slds-list_horizontal slds-has-dividers_right textdecorationnone">
                <li class="slds-item">{!v.firstName}</li>
                <li class="slds-item">{!v.lastName}</li>
            </ul>
        </lightning:tile>
      <aura:set attribute="else">
         <lightning:tile label="Create My Profile" href="{!v.profileUrl}">        
            <aura:set attribute="media">
                <lightning:avatar src="/docs/component-library/app/images/examples/avatar1.jpg" fallbackIconName="standard:person_account" alternativeText="Lexee L. Jackson"/>
            </aura:set>            
        </lightning:tile>
      </aura:set>
   </aura:if> 
</aura:component>


JS Controller:
--------------
({
    GetProfileID : function(component, event, helper) {
        var state;
        var redirectUrl;
        var loggedInUser;
        var stateId;
        var viewId;
        var action = component.get("c.getLoggedInUser");
        action.setCallback(this, function(response) {
            state = response.getState();
            if(state == "SUCCESS"){
                loggedInUser = response.getReturnValue();                
                /*redirectUrl = 'https://employcommunity-developer-edition.ap8.force.com/CustomerExperience/s/team-member-profile/'+ loggedInUser.Id +'/tm001';
                component.set("v.profileUrl",redirectUrl);*/
                redirectUrl = 'team-member-profile/'+ loggedInUser.Id;                
                component.set("v.firstName",loggedInUser.First_Name__c);
                component.set("v.lastName",loggedInUser.Last_Name__c);
                component.set("v.responseStatus",true);
                component.set("v.profileUrl",redirectUrl);
            }else{
                var actionId = component.get("c.getListFilter");
                actionId.setCallback(this, function(response) {
                    stateId = response.getState();
                    if(stateId == "SUCCESS"){
                        viewId = response.getReturnValue(); 
                        //redirectUrl = 'team-member-profile/Team_Member_Profile__c/00B0o00000EVziREAT';
                        redirectUrl = 'team-member-profile/Team_Member_Profile__c/'+viewId.Id;
                        component.set("v.profileUrl",redirectUrl);
                        component.set("v.responseStatus",false);
                    }else{
                        
                    }
                });
                $A.enqueueAction(actionId);                
            }           
        });
        $A.enqueueAction(action);
    }
})


Apex Class:
-----------
public class GetProfileId {
	@AuraEnabled
    public static Team_Member_Profile__c getLoggedInUser(){
        System.debug('User Id: ' + UserInfo.getUserId());
        System.debug('User Id: ' + UserInfo.getFirstName()); 
        
        return [SELECT Id,First_Name__c,Last_Name__c FROM Team_Member_Profile__c WHERE CreatedById =: UserInfo.getUserId() LIMIT 1];        
    }
    @AuraEnabled
    public static ListView getListFilter(){
       return [SELECT Id FROM ListView where Name = 'My Profiles' LIMIT 1];        
    }  
    
}
